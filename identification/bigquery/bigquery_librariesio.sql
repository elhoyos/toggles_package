SELECT DISTINCT r.name_with_owner, r.host_type, CAST(r.size * 1024 AS int64) AS bytes, r.language, r.fork_source_name_with_owner, r.updated_timestamp, libraries.artifact_name, libraries.library, libraries.languages AS library_language
FROM `bigquery-public-data.libraries_io.projects` p
INNER JOIN UNNEST([
  STRUCT('unleash-client-dotnet' AS library, 'Unleash.FeatureToggle.Client' AS artifact_name, 'NuGet' AS platform, 'C#,Visual Basic' AS languages),
  STRUCT('unleash-client' AS library, 'unleash.client' AS artifact_name, 'NuGet' AS platform, 'C#,Visual Basic' AS languages),
  STRUCT('launchdarkly' AS library, 'LaunchDarkly.Client' AS artifact_name, 'NuGet' AS platform, 'C#,Visual Basic' AS languages),
  STRUCT('NFeature' AS library, 'NFeature' AS artifact_name, 'NuGet' AS platform, 'C#,Visual Basic' AS languages),
  STRUCT('FeatureToggle' AS library, 'FeatureToggle' AS artifact_name, 'NuGet' AS platform, 'C#,Visual Basic' AS languages),
  STRUCT('FeatureSwitcher' AS library, 'FeatureSwitcher' AS artifact_name, 'NuGet' AS platform, 'C#,Visual Basic' AS languages),
  STRUCT('Toggler' AS library, 'Toggler' AS artifact_name, 'NuGet' AS platform, 'C#,Visual Basic' AS languages),
  STRUCT('launchdarkly' AS library, 'github.com/launchdarkly/go-client' AS artifact_name, 'Go' AS platform, 'Go' AS languages),
  STRUCT('Toggle' AS library, 'github.com/xchapter7x/toggle' AS artifact_name, 'Go' AS platform, 'Go' AS languages),
  STRUCT('dcdr' AS library, 'github.com/vsco/dcdr' AS artifact_name, 'Go' AS platform, 'Go' AS languages),
  STRUCT('unleash-client-go' AS library, 'github.com/unleash/unleash-client-go' AS artifact_name, 'Go' AS platform, 'Go' AS languages),
  STRUCT('unleash-client-node' AS library, 'unleash-client' AS artifact_name, 'NPM' AS platform, 'JavaScript,TypeScript' AS languages),
  STRUCT('launchdarkly' AS library, 'ldclient-js' AS artifact_name, 'NPM' AS platform, 'JavaScript,TypeScript' AS languages),
  STRUCT('ember-feature-flags' AS library, 'ember-feature-flags' AS artifact_name, 'NPM' AS platform, 'JavaScript,TypeScript' AS languages),
  STRUCT('feature-toggles' AS library, 'feature-toggles' AS artifact_name, 'NPM' AS platform, 'JavaScript,TypeScript' AS languages),
  STRUCT('React Feature Toggles' AS library, '@paralleldrive/react-feature-toggles' AS artifact_name, 'NPM' AS platform, 'JavaScript,TypeScript' AS languages),
  STRUCT('launchdarkly' AS library, 'ldclient-node' AS artifact_name, 'NPM' AS platform, 'JavaScript,TypeScript' AS languages),
  STRUCT('flipit' AS library, 'flipit' AS artifact_name, 'NPM' AS platform, 'JavaScript,TypeScript' AS languages),
  STRUCT('fflip' AS library, 'fflip' AS artifact_name, 'NPM' AS platform, 'JavaScript,TypeScript' AS languages),
  STRUCT('Bandiera' AS library, 'bandiera-client' AS artifact_name, 'NPM' AS platform, 'JavaScript,TypeScript' AS languages),
  STRUCT('flopflip' AS library, '@flopflip/react-redux' AS artifact_name, 'NPM' AS platform, 'JavaScript,TypeScript' AS languages),
  STRUCT('flopflip' AS library, '@flopflip/react-broadcast' AS artifact_name, 'NPM' AS platform, 'JavaScript,TypeScript' AS languages),
  STRUCT('launchdarkly' AS library, 'com.launchdarkly:launchdarkly-android-client' AS artifact_name, 'Maven' AS platform, 'Kotlin,Java' AS languages),
  STRUCT('toggle' AS library, 'cc.soham:toggle' AS artifact_name, 'Maven' AS platform, 'Kotlin,Java' AS languages),
  STRUCT('unleash-client-java' AS library, 'no.finn.unleash:unleash-client-java' AS artifact_name, 'Maven' AS platform, 'Kotlin,Java' AS languages),
  STRUCT('launchdarkly' AS library, 'com.launchdarkly:launchdarkly-client' AS artifact_name, 'Maven' AS platform, 'Kotlin,Java' AS languages),
  STRUCT('Togglz' AS library, 'org.togglz:togglz-core' AS artifact_name, 'Maven' AS platform, 'Kotlin,Java' AS languages),
  STRUCT('FF4J' AS library, 'org.ff4j:ff4j-core' AS artifact_name, 'Maven' AS platform, 'Kotlin,Java' AS languages),
  STRUCT('Flip' AS library, 'com.tacitknowledge.flip:core' AS artifact_name, 'Maven' AS platform, 'Kotlin,Java' AS languages),
  STRUCT('launchdarkly' AS library, 'LaunchDarkly' AS artifact_name, 'CocoaPods' AS platform, 'Objective-C,Swift' AS languages),
  STRUCT('launchdarkly' AS library, 'launchdarkly/ios-client' AS artifact_name, 'Carthage' AS platform, 'Objective-C,Swift' AS languages),
  STRUCT('launchdarkly' AS library, 'launchdarkly/launchdarkly-php' AS artifact_name, 'Packagist' AS platform, 'PHP' AS languages),
  STRUCT('Symfony FeatureFlagsBundle' AS library, 'dzunke/feature-flags-bundle' AS artifact_name, 'Packagist' AS platform, 'PHP' AS languages),
  STRUCT('rollout' AS library, 'opensoft/rollout' AS artifact_name, 'Packagist' AS platform, 'PHP' AS languages),
  STRUCT('Bandiera' AS library, 'npg/bandiera-client-php' AS artifact_name, 'Packagist' AS platform, 'PHP' AS languages),
  STRUCT('unleash-client-python' AS library, 'UnleashClient' AS artifact_name, 'Pypi' AS platform, 'Python' AS languages),
  STRUCT('launchdarkly' AS library, 'ldclient-py' AS artifact_name, 'Pypi' AS platform, 'Python' AS languages),
  STRUCT('Flask FeatureFlags' AS library, 'Flask-FeatureFlags' AS artifact_name, 'Pypi' AS platform, 'Python' AS languages),
  STRUCT('Gutter' AS library, 'gutter' AS artifact_name, 'Pypi' AS platform, 'Python' AS languages),
  STRUCT('Feature Ramp' AS library, 'feature_ramp' AS artifact_name, 'Pypi' AS platform, 'Python' AS languages),
  STRUCT('flagon' AS library, 'flagon' AS artifact_name, 'Pypi' AS platform, 'Python' AS languages),
  STRUCT('Waffle' AS library, 'django-waffle' AS artifact_name, 'Pypi' AS platform, 'Python' AS languages),
  STRUCT('Gargoyle' AS library, 'gargoyle' AS artifact_name, 'Pypi' AS platform, 'Python' AS languages),
  STRUCT('Gargoyle' AS library, 'gargoyle-yplan' AS artifact_name, 'Pypi' AS platform, 'Python' AS languages),
  STRUCT('unleash-client-ruby' AS library, 'unleash' AS artifact_name, 'Rubygems' AS platform, 'Ruby' AS languages),
  STRUCT('launchdarkly' AS library, 'ldclient-rb' AS artifact_name, 'Rubygems' AS platform, 'Ruby' AS languages),
  STRUCT('rollout' AS library, 'rollout' AS artifact_name, 'Rubygems' AS platform, 'Ruby' AS languages),
  STRUCT('FeatureFlipper' AS library, 'feature_flipper' AS artifact_name, 'Rubygems' AS platform, 'Ruby' AS languages),
  STRUCT('Flip' AS library, 'flip' AS artifact_name, 'Rubygems' AS platform, 'Ruby' AS languages),
  STRUCT('Setler' AS library, 'setler' AS artifact_name, 'Rubygems' AS platform, 'Ruby' AS languages),
  STRUCT('Bandiera' AS library, 'bandiera-client' AS artifact_name, 'Rubygems' AS platform, 'Ruby' AS languages),
  STRUCT('Feature' AS library, 'feature' AS artifact_name, 'Rubygems' AS platform, 'Ruby' AS languages),
  STRUCT('Flipper' AS library, 'flipper' AS artifact_name, 'Rubygems' AS platform, 'Ruby' AS languages),
  STRUCT('Bandiera' AS library, 'com.springernature:bandiera-client-scala_2.12' AS artifact_name, 'Maven' AS platform, 'Scala' AS languages),
  STRUCT('Bandiera' AS library, 'com.springernature:bandiera-client-scala_2.11' AS artifact_name, 'Maven' AS platform, 'Scala' AS languages)
]) libraries
ON p.name = libraries.artifact_name AND p.platform = libraries.platform
INNER JOIN `bigquery-public-data.libraries_io.repository_dependencies` rd
ON rd.dependency_project_id = p.id
INNER JOIN `bigquery-public-data.libraries_io.repositories` r
ON r.id = rd.repository_id
